buildscript {
	repositories {
		//Required repos
		jcenter()
		mavenCentral()
	}
	dependencies {
		//Required dependency for spring-boot plugin
		classpath ("org.asciidoctor:asciidoctor-gradle-plugin:1.5.3")
        classpath ("org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.10.1")
		classpath ("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
		classpath ("io.github.swagger2markup:swagger2markup-spring-restdocs-ext:1.2.0")
        classpath ("io.github.swagger2markup:swagger2markup-gradle-plugin:1.2.0")
	}
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'io.github.swagger2markup'

ext {
    asciiDocOutputDir = file("${buildDir}/asciidoc/generated")
    swaggerOutputDir = file("${buildDir}/swagger")
    snippetsOutputDir = file("${buildDir}/asciidoc/snippets")
    springfoxVersion = '2.4.0'
}


repositories {
	jcenter()
    mavenCentral()
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile 'io.swagger:swagger-annotations:1.5.6'
	compile("com.fasterxml.jackson.dataformat:jackson-dataformat-smile:2.6.5")
    compile("com.fasterxml.jackson.module:jackson-module-afterburner:2.6.5")
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.4.0'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.4.0'
	compile ("io.github.swagger2markup:swagger2markup:1.3.0")
	
	//Required dependency for JSP
	providedRuntime 'org.apache.tomcat.embed:tomcat-embed-jasper'
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testCompile 'com.fasterxml.jackson.module:jackson-module-jsonSchema:2.6.5'
}

test {
    systemProperty 'io.springfox.staticdocs.outputDir', swaggerOutputDir
    systemProperty 'io.springfox.staticdocs.snippetsOutputDir', snippetsOutputDir
}



asciidoctor {
    
    backends = ['html5', 'pdf']
    attributes = [
            doctype: 'book',
            toc: 'left',
            toclevels: '3',
            numbered: '',
            sectlinks: '',
            sectanchors: '',
            hardbreaks: '',
            generated: asciiDocOutputDir
    ]
}

jar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
    from ("${asciidoctor.outputDir}/pdf") {
        into 'static/docs'
    }
}

